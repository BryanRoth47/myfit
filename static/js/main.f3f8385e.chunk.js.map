{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","globalDefinitions.js","api/algorithm.js","api/user.js","pages/CreatePlan/panes/IntroPane.jsx","components/CustomCard.jsx","pages/CreatePlan/panes/GoalsPane.jsx","components/CustomFormNumber.jsx","pages/CreatePlan/panes/AgeGenderPane.jsx","pages/CreatePlan/helpers_createPlan.jsx","pages/CreatePlan/panes/EquipmentPane.jsx","pages/CreatePlan/panes/FrequencyPane.jsx","pages/CreatePlan/panes/FitnessLevelPane.jsx","pages/CreatePlan/panes/FinalPaneSubmitData.jsx","pages/CreatePlan/panes/FinalPaneSuccess.jsx","pages/CreatePlan/panes/FinalPane.jsx","components/ForceLogin.jsx","pages/CreatePlan/multistep-modified.js","pages/CreatePlan/index.js","pages/Home/index.js","pages/ViewPlans/index.js","aws-exports.js","components/navbar.js","pages/Login/Profile.js","pages/Login/index.js","components/InstructionsAndTips.jsx","components/Tooltip.jsx","App.js","serviceWorker.js","index.js","components/Tooltip.scss","pages/CreatePlan/CreatePlan.scss"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","equipmentAvailable","dumbbells","name","image","bench","barbells","pullup_bar","squat_rack","bike","goalsAvailable","lose_weight","overall","bulk_up","fitLevelsAvailable","level1","level2","level3","level4","level5","frequencyAvailable","oneDay","twoDays","threeDays","gendersAvailable","male","category","female","exerciseData","back","video","levels","equipment","goals","instructions","tips","biceps","chest","triceps","legs","shoulders","cardio","exercises","ret","entries","forEach","bodypart","exercise","makeObject","generatePlan","userInput","key","find","validLevel","some","l","FitnessLevel","length","validEquip","every","equip","Equipment","userEquip","validGoals","g","Goals","schedule","userFrequency","Frequency","goal","Monday","Wednesday","Friday","plan","tip","d","Date","time","getTime","baseUrl","getUserId","callback","a","Auth","currentAuthenticatedUser","user","attributes","sub","getUsername","username","binaryToString","input","bytesLeft","result","byte","substr","String","fromCharCode","parseInt","savePlan","JSON","stringify","splan","split","char","binary","charCodeAt","toString","pad","Math","max","repeat","join","userId","fetch","method","headers","body","comment","response","json","getPlan","Items","S","parse","IntroPane","props","Jumbotron","className","style","backgroundColor","CustomCard","state","selected","styles","minHeight","colorScheme","backgroundNormal","inputRef","React","createRef","handleClick","bind","undefined","this","pass","Card","ref","title","onClick","Img","variant","src","width","marginTop","Body","Title","Component","ensureCorrectNumberSelected","objectOfRefs","nameOfSelected","onlyOneCanBeSelected","hexValue","RGBtoHex","current","backgroundSelected","rgbValue","x","GoalsPane","addRef","handleSelected","cardSelected","toDisplay","values","piece","textAlign","CardColumns","CustomFormNumber","useState","currentValue","setValue","useEffect","Form","Group","Control","size","type","placeholder","value","onChange","target","AgeGenderPane","gendersToDisplay","position","left","height","sortArrayForCardColumns","tempMap","toReturn","c","nextElement","push","EquipmentPane","tempArr","sort","b","nameA","toUpperCase","nameB","FrequencyPane","FitnessLevelPane","FinalPaneSubmitData","isLoading","setLoading","createPlan","Container","Row","Col","xs","span","offset","Button","background","FinalPaneSuccess","to","FinalPane","createPlanSuccessful","ForceLogin","verbToDisplay","page","setup","createElement","getButtonsState","indx","textForNext","showPreviousBtn","showNextBtn","MultiStep","showNav","showNavigation","compState","setComp","steps","buttonsState","setButtons","setStepState","next","previous","onKeyDown","evt","which","component","display","CreatePlan","success","planCreatedSuccessfully","useCallback","useRef","setUsername","item","index","indexOf","splice","temp","Modal","Dialog","Home","Fragment","moment","locale","localizer","momentLocalizer","typicalWeek","bodyParts","firstWeek","Array","generateFirstWeek","today","dayToday","getDay","i","setDate","getDate","ViewPlans","myevent","setmyevent","savedPlan","eventArray","firstDay","j","curname","k","curDay","newevent","fetchData","backgroundImage","popup","onSelectEvent","events","step","views","defaultView","Views","MONTH","awsmobile","CustomNavBar","loggedIn","userLoggedIn","setuserLoggedIn","Navbar","expand","NavbarBrand","activeStyle","fontWeight","textDecoration","marginLeft","color","Profile","padding","Amplify","configure","awsconfig","AuthStateApp","history","useHistory","authState","setAuthState","first","setUser","isLoginPage","useLocation","pathname","onAuthUIStateChange","nextAuthState","authData","prevState","AuthState","SignedIn","Instructions","substring","fontSize","Tips","Tooltip","handleClose","hide","centered","dialogClassName","show","onHide","Header","closeButton","Footer","App","setShow","setExercise","Login","path","event","selectedExercise","createTooltip","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3f8385e.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t243,\n\t\t16\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t244,\n\t\t17\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t245,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t246,\n\t\t18\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t247,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t248,\n\t\t19\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t249,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t250,\n\t\t20\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t251,\n\t\t21\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t252,\n\t\t22\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t253,\n\t\t23\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t254,\n\t\t24\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t255,\n\t\t25\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t256,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t257,\n\t\t26\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t258,\n\t\t27\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t259,\n\t\t28\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t260,\n\t\t29\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t261,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t262,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t263,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t264,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t265,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t266,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t267,\n\t\t30\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t268,\n\t\t14\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t269,\n\t\t31\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t270,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 217;\nmodule.exports = webpackAsyncContext;","/*\r\n    This module contains the global definitions for all possible equipment and their exact names\r\n*/\r\n\r\nexport const equipmentAvailable = {\r\n    dumbbells: { name: 'Dumbbells', image: \"/myfit/icons/dumbell.png\" },\r\n    bench: { name: 'Bench', image: \"/myfit/icons/bench_press.png\" },\r\n    barbells: { name: 'Barbells', image: \"/myfit/icons/barbell.png\" },\r\n    pullup_bar: { name: 'Pull-up bar', image: \"/myfit/icons/pullup_bar.png\" },\r\n    squat_rack: { name: 'Squat Rack', image: \"/myfit/icons/squat_rack.png\" },\r\n    bike: { name: 'Bicycle', image: \"/myfit/icons/bike.png\" }\r\n}\r\n\r\nexport const goalsAvailable = {\r\n    lose_weight: { name: 'Lose Weight', image: '/myfit/icons/lose_weight.png' },\r\n    overall: { name: 'Overall Fitness', image: '/myfit/icons/overall_fitness.png' },\r\n    bulk_up: { name: 'Bulk Up', image: '/myfit/icons/bulk_up.png' }\r\n}\r\n\r\nexport const fitLevelsAvailable = {\r\n    level1: { name: 'Complete Novice', image: '/myfit/icons/numbers/number-1.svg' },\r\n    level2: { name: 'Recently Started', image: '/myfit/icons/numbers/number-2.svg' },\r\n    level3: { name: 'Perfectly Adequate', image: '/myfit/icons/numbers/number-3.svg' },\r\n    level4: { name: 'Advanced', image: '/myfit/icons/numbers/number-4.svg' },\r\n    level5: { name: 'Gym Rat', image: '/myfit/icons/numbers/number-5.svg' },\r\n}\r\n\r\nexport const frequencyAvailable = {\r\n    oneDay: { name: 'Once a week', image: '/myfit/icons/numbers/number-1.svg' },\r\n    twoDays: { name: 'Twice a week', image: '/myfit/icons/numbers/number-2.svg' },\r\n    threeDays: { name: 'Three days a week', image: '/myfit/icons/numbers/number-3.svg' },\r\n}\r\n\r\nexport const gendersAvailable = {\r\n    male: { name: 'Male', image: '/myfit/icons/male-symbol.png', category:'Gender' },\r\n    female: { name: 'Female', image: '/myfit/icons/female-symbol.png', category:'Gender' },\r\n}\r\n\r\n/*\r\n    exerciseData is an object where each key holds an array of more objects\r\n    exercisesData={\r\n        bodypart[{exercise1},exercise2{},...],\r\n        ...\r\n        ]\r\n    }\r\n*/\r\n\r\n// full address of video is https://www.youtube.com/watch?v={video}\r\nexport const exerciseData = {\r\n    back: [\r\n        {\r\n            name: 'Deadlift',\r\n            video: 'ytGaGIn3SjE',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.barbells],\r\n            goals: [goalsAvailable.overall, goalsAvailable.bulk_up],\r\n            instructions: [\"Start off standing in front of a barbell with your feet shoulder-width apart\",\r\n                \"Pick up the barbell while keeping your arms extended straight down.\",\r\n                \"Stand up straight with the barbell in your hands, and refrain from moving your arms.\",\r\n                \"Bend back down at the knees with barbell.\",\r\n                \"Repeat for the desired amount of reps.\"\r\n            ],\r\n            //tips: []\r\n        },\r\n        {\r\n            name: 'Pull-Ups',\r\n            video: 'IpxAG2z91Ys',\r\n            levels: [fitLevelsAvailable.level3, fitLevelsAvailable.level4, fitLevelsAvailable.level5],\r\n            equipment: [equipmentAvailable.pullup_bar],\r\n            goals: [goalsAvailable.lose_weight, goalsAvailable.overall],\r\n            instructions: [\r\n                \"Grab the bar with your palms facing outward.\",\r\n                \"Lift your self up till your chin is above the bar.\",\r\n                \"Pause for a few seconds.\",\r\n                \"Lower yourself down slowly.\",\r\n                \"Repeat for the desired amount of reps.\"\r\n            ],\r\n            tips: [\"For an increased workout, wear ankle weights.\"]\r\n        },\r\n        {\r\n            name: 'Superman',\r\n            video: 'cc6UVRS7PW4',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off lying flat on your stomach with your arms stretched out in front of you.\",\r\n                \"Slowly raise one arm and the opposite leg up off of the floor and hold onto this position for a few seconds until you feel a tight stretch in your core and back muscles.\",\r\n                \"Return back to the starting position.\",\r\n                \"Repeat with other arm and leg.\",\r\n                \"Repeat, alternating side, for the desired amount of reps.\"\r\n            ],\r\n            //tips: []\r\n        }\r\n    ],\r\n    biceps: [\r\n        {\r\n            name: 'Dumbbell Bicep Curls',\r\n            video: 'ykJmrZ5v0Oo',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.dumbbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off standing up straight with your feet shoulder-width apart, abs tight, knees slightly bent and a dumbbell in each hand holding in a palms up grip.\",\r\n                \"While holding the dumbbells extend your arms at the side of your body, then slowly lift your arms up towards your chest until your forearms touch your biceps.\",\r\n                \"Isolate the bicep and hold this position for a count.\",\r\n                \"Return back to the starting position and repeat for as many reps and sets as desired.\"\r\n            ],\r\n            tips: [\"Refrain from swinging your arms during this exercise.\"]\r\n        },\r\n        {\r\n            name: 'Barbell Bicep Curls',\r\n            video: 'QZEqB6wUPxQ',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.barbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off standing up straight with your feet shoulder-width apart, keeping your knees slightly bent and abs drawn in tight.\",\r\n                \"Grab a barbell with a shoulder width underhand (palms up) grip, lowering your arms down to your thighs fully and bending slightly at your elbows as this will be your starting position.\",\r\n                \"Slowly raise the bar towards your upper chest, squeezing your muscles and isolating the biceps.\",\r\n                \"Hold this position for a count and then return back to the starting position.\"\r\n            ],\r\n            tips: [\"Refrain from swinging your hips or back during this exercise.\"]\r\n        },\r\n        {\r\n            name: 'Towel Bicep Curls',\r\n            video: 'p8z4fhUWhP4',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Grasp the ends of a bath-sized towel in each hand.\",\r\n                \"Put tension on the towel by pulling your your hands outwards\",\r\n                \"Slowly raise the towel towards your upper chest, while maintaining tension on the towel\",\r\n                \"Hold this position for a count and then return back to the starting position.\"\r\n            ],\r\n            tips: [\"Hang weights from the towel for a tougher workout.\"]\r\n        }\r\n    ],\r\n    chest: [\r\n        {\r\n            name: 'Barbell Bench Press',\r\n            video: 'ysUTNll8JQ8',\r\n            levels: [fitLevelsAvailable.level2, fitLevelsAvailable.level3, fitLevelsAvailable.level4, fitLevelsAvailable.level5],\r\n            equipment: [equipmentAvailable.bench, equipmentAvailable.barbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Lie with your back flat on a bench with your feet firmly on the ground and the bar resting on the bench’s rack.\",\r\n                \"Slowly lift the bar off the rack and hold it above your chest as this will be the starting position.\",\r\n                \"Then lower the bar down until it is slightly above your chest, making sure that it doesn't touch or slam against your chest.\",\r\n                \"Hold this position briefly and make sure you have complete control of the bar, then raise it back up to the starting postion.\", \"Repeat for as many reps and sets as desired.\"\r\n            ],\r\n            tips: [\r\n                \"By changing the width of the grip on the bar will change the focus and targeting of the exercise. Using a medium grip is the most common grip on the bar which is slightly wider than shoulder-width that is typically marked on the bar.\",\r\n                \"Using a spotter while performing this exercise is essential to make sure that the bar doesn't drop onto your chest and a spotter can provide motivation to lift more weight.\",\r\n                \"The most important thing about the bench press exercise is using a weight that you can manage while maintaining proper form. Many individuals try to lift more weight than they can manage which results in injuring and incorrectly performing the exercise.\"\r\n            ]\r\n        },\r\n        {\r\n            name: 'Dumbbell Bench Press',\r\n            video: 'Y_7aHqXeCfQ',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.bench, equipmentAvailable.dumbbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off by picking the dumbbells that you can manage, holding them at your sides and then sitting on the edge of a flat bench.\",\r\n                \"Using your thighs and thrusting of your arms to lift the weights onto your legs in your starting position.\",\r\n                \"Lean back onto the bench and on the motion down, push the dumbbells up about an inch high above your chest as this will be your starting position.\",\r\n                \"The dumbbells should be aligned with the middle of your chest and then slowly push the dumbbells up above your body using mostly your chest and triceps for the motion upward.\",\r\n                \"Stop the motion of the exercise as soon as your arms are straight and the dumbbells are directly above your chest.\",\r\n                \"Squeeze your chest muscles as soon as you reach the top position and hold for a count, then return back to the starting position.\",\r\n                \"On the return motion down, do not let gravity do the work or drop the dumbbells, you should be resisting gravity of the way down.\"\r\n            ],\r\n            tips: [\r\n                \"Make sure when performing this exercise to breathe comfortably and deeply\",\r\n                \"Refrain from clanking the dumbbells together or spinning them around when you get to the top as this is improper form.\"\r\n            ]\r\n        },\r\n        {\r\n            name: 'Push-ups',\r\n            video: 'IODxDxX7oi4',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off by lying face down on the floor or on a mat with your feet together and arms shoulder width apart.\",\r\n                \"Slowly draw your abs in, inhale and raise your body off of the floor until your arms are straight, keeping your head and neck level with your body as this will be your starting position.\",\r\n                \"As you lower yourself down towards the ground, exhale until your chest almost touches the ground and you feel a stretch in your chest muscles.\",\r\n                \"Hold for a count at the bottom position and then return back up to the starting position.\"\r\n            ],\r\n            tips: [\"A close grip works more of the inner pectorals and a wide grip works more of the outer pectorals.\"]\r\n        }\r\n    ],\r\n    triceps: [\r\n        {\r\n            name: 'Dumbbell Tricep Extensions',\r\n            video: 'X-iV-cG8cYs',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.dumbbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off standing with your feet shoulder width apart, keeping your back straight and your abs drawn in.\",\r\n                \"Hold a dumbbell in both hands, with your palms facing up.\",\r\n                \"Raise the dumbbell over your head and slowly lower the dumbbell in an arc behind your head and hold for a count.\",\r\n                \"Slowly raise the dumbbell back up to the starting position.\"\r\n            ]\r\n        },\r\n        {\r\n            name: 'Tricep Dips',\r\n            video: '6kALZikXxLc',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off setting up a chair and positioning yourself in between the chair so that your hands are about shoulder width apart on the chair.\",\r\n                \"Move your feet out in front of you so that your legs are straight.\",\r\n                \"Then straighten your arms out on the chair so that you are elevated and tension is placed on your triceps.\",\r\n                \"Slowly lower your upper body down towards the floor with your elbows so that they are at level with your shoulders.\",\r\n                \"Hold for a count, squeezing your triceps and return back to the starting position.\",\r\n                \"Repeat for as many reps and sets as desired.\"\r\n            ]\r\n        }\r\n    ],\r\n    legs: [\r\n        {\r\n            name: 'Barbell Squats',\r\n            video: '1oed-UmAxFs',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.squat_rack, equipmentAvailable.barbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off by setting up a weighted barbell with the amount of weight that you would like to perform for this exercise.\",\r\n                \"Then position the bar on your shoulder blades with an overhand shoulder width grip just as in a regular squat position.\",\r\n                \"Bend at your knees and slowly lower yourself towards the ground, squatting down as far as possible and squeezing your squads.\",\r\n                \"Hold for a count then return back up to the starting position.\",\r\n                \"Repeat for as many reps and sets as desired.\"\r\n            ],\r\n            tips: [\"Keep your chest vertical throughout the exercise\"]\r\n        },\r\n        {\r\n            name: 'Dumbbell Lunges',\r\n            video: 'D7KaRcUTQeE',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.dumbbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off grabbing a dumbbell in each hand and standing with your feet about 8 inches apart and toes facing forward as this will be your starting position.\",\r\n                \"Once in position take a step forward (about 2 to 3 feet), keeping your abs tightly drawn and and your upper body straight.\",\r\n                \"Continue forward and slowly lower one knee down towards the ground and keeping the other knee bent at a 90 degree angle, not letting the back knee touch the ground.\",\r\n                \"Slowly lower one knee down as if kneeling while keeping your other knee bent at a 90 degree angle, do not let your knee touch the ground.\",\r\n                \"Hold the position for a count then return back up to the starting position.\"\r\n            ],\r\n            tips: [\r\n                \"Refrain from putting the pressure of your body on one knee as this can cause imbalance and incorrectly performing this exercise.\",\r\n                \"The knee you are leaning forward on should not move beyond the toe of this foot.\"\r\n            ]\r\n        },\r\n        {\r\n            name: 'Squats',\r\n            video: 'aclHkVaku9U',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"To begin this exercise; start off by standing feet shoulder width apart and flex at your knees and torso sitting back with your hips.\",\r\n                \"Extend your arms out in front of you and squat down until your knees are parallel with your glutes.\",\r\n                \"Return back to the starting position.\",\r\n                \"Repeat this exercise for as many repetitions as needed\"\r\n            ],\r\n            tips: [\"Clasp your hands together for a greater workout\"]\r\n        }\r\n    ],\r\n    shoulders: [\r\n        {\r\n            name: 'Dumbbell Shoulder Press',\r\n            video: 'B-aVuyhvLHU',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.dumbbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off standing up straight with your feet shoulder width apart and your arms rested at your sides, holding dumbbells in each hand.\",\r\n                \"Raise the dumbbells to head level so that your arms are creating a 90 degree angle.\",\r\n                \"Slowly push the dumbbells up, by extending through the elbows, over your head, feeling a stretch in your shoulders.\",\r\n                \"Hold for a count then return back to the starting position.\",\r\n                \"Repeat for as many reps and sets as desired.\"\r\n            ]\r\n        },\r\n        {\r\n            name: 'Barbell Shoulder Press',\r\n            video: 'QAQ64hK4Xxs',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.barbells],\r\n            goals: null,\r\n            instructions: [\r\n                \"To begin this exercise; start off by taking a weighted barbell and have it pressed up against your chest with your palms facing outward.\",\r\n                \"With the barbell in position, lift it above your head with locked arms and hold for a few seconds squeezing your back and shoulders tightly.\",\r\n                \"Return back to the starting position.\",\r\n                \"Repeat this exercise for as many repetitions as needed.\"\r\n            ],\r\n            tips: [\"Make sure to lift the barbel in a straight line, not a curved line.\"]\r\n        },\r\n        {\r\n            name: 'Incline Push-Ups',\r\n            video: 'Me9bHFAxnCs',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Start off by kneeling in front of a chair or bench with your arms fully extended and body straight.\",\r\n                \"While keeping your abs drawn in and body straight, lower your chest down towards chair/bench until you feel a stretch in your chest muscles.\",\r\n                \"Hold the position for a count and then slowly return back up to the starting position.\",\r\n                \"Repeat this exercise for as many repetitions as needed.\"\r\n            ],\r\n            tips: [\"Make sure to keep your body in a straight line. Don't bend your back.\"]\r\n        }\r\n    ],\r\n    cardio: [\r\n        {\r\n            name: 'Cycling',\r\n            video: 'sZE8tJnTHhw',\r\n            levels: null,\r\n            equipment: [equipmentAvailable.bike],\r\n            goals: null,\r\n            instructions: [\"Biking burns calories, tones the body, strengthens the legs, increases stamina, endurance, and balance.\"]\r\n        },\r\n        {\r\n            name: 'Jogging',\r\n            video: '5umbf4ps0GQ',\r\n            levels: null,\r\n            equipment: null,\r\n            goals: null,\r\n            instructions: [\r\n                \"Jogging is often defined as running at a pace less than 6 miles per hour (mph).\",\r\n                \"Jogging is a great way to increase the intensity of your workout gradually.\",\r\n                \"Make sure to stretch before jogging.\"\r\n            ]\r\n        },\r\n    ]\r\n};\r\n\r\n// it will be helpful to take the entries in exerciseData and put them all into one large array, rather than being broken into categories\r\nfunction makeObject() {\r\n    let ret = {};\r\n    // for each bodypart\r\n    Object.entries(exerciseData).forEach(bodypart => {\r\n        // for each exercise for that bodypart\r\n        bodypart[1].forEach(exercise => {\r\n            // add it to the new object\r\n            ret[exercise.name] = exercise\r\n        })\r\n    })\r\n    return ret;\r\n\r\n}\r\n// export as a separate line so function only gets called once\r\nexport const exercises = makeObject()","import { exerciseData, frequencyAvailable, goalsAvailable } from '../globalDefinitions.js';\r\n\r\n/*\r\n    Some fields can only have 1 input (i.e. Level, Goals). Changing array[0] to array[userInput.FitnessLevel.length-1] so the last selected\r\n    value will be the one considered by the algorithm. This is a work around until we get around to properly removing the old selections from the array\r\n*/\r\n\r\nconst generatePlan = (userInput) => {\r\n    // find matching exercises\r\n    const exercises = {};\r\n    for (const [key, value] of Object.entries(exerciseData)) {\r\n        const exercise = value.find(e => {\r\n            const validLevel = !e.levels || e.levels.some(l => l.name === userInput.FitnessLevel[userInput.FitnessLevel.length - 1]);\r\n            const validEquip = !e.equipment || e.equipment.every(equip => userInput.Equipment.some(userEquip => userEquip === equip.name));\r\n            const validGoals = !e.goals || e.goals.some(g => g.name === userInput.Goals[userInput.Goals.length - 1]);\r\n            //console.log(validLevel, validEquip, validGoals)\r\n            return validLevel && validEquip && validGoals;\r\n        });\r\n        exercises[key] = { name: exercise.name, video: exercise.video };\r\n    }\r\n\r\n    // generate schedule based on frequency\r\n    const schedule = {};\r\n    const userFrequency = userInput.Frequency[userInput.Frequency.length - 1];\r\n    const goal = userInput.Goals[userInput.Goals.length - 1];\r\n    if (userFrequency === frequencyAvailable.oneDay.name) {\r\n        if (goal !== goalsAvailable.lose_weight.name || goal !== goalsAvailable.overall.name) {\r\n            delete exercises.cardio;\r\n        }\r\n        schedule.Monday = exercises;\r\n    } else if (userFrequency === frequencyAvailable.twoDays.name) {\r\n        schedule.Monday = {\r\n            back: exercises.back,\r\n            biceps: exercises.biceps,\r\n            legs: exercises.legs\r\n        };\r\n        schedule.Wednesday = {\r\n            chest: exercises.chest,\r\n            shoulders: exercises.shoulders,\r\n            triceps: exercises.triceps\r\n        }\r\n        if (goal === goalsAvailable.overall.name || goal === goalsAvailable.lose_weight.name) {\r\n            schedule.Monday = { ...schedule.Monday, cardio: exercises.cardio }\r\n        }\r\n        if (goal === goalsAvailable.lose_weight.name) {\r\n            schedule.Wednesday = { ...schedule.Wednesday, cardio: exercises.cardio }\r\n        }\r\n    } else if (userFrequency === frequencyAvailable.threeDays.name) {\r\n        schedule.Monday = {\r\n            back: exercises.back,\r\n            biceps: exercises.biceps,\r\n        };\r\n        schedule.Wednesday = {\r\n            chest: exercises.chest,\r\n            triceps: exercises.triceps\r\n        };\r\n        schedule.Friday = {\r\n            shoulders: exercises.shoulders,\r\n            legs: exercises.legs\r\n        }\r\n        if (goal === goalsAvailable.overall.name || goal === goalsAvailable.lose_weight.name) {\r\n            schedule.Friday = { ...schedule.Friday, cardio: exercises.cardio }\r\n        }\r\n        if (goal === goalsAvailable.lose_weight.name) {\r\n            schedule.Monday = { ...schedule.Monday, cardio: exercises.cardio }\r\n        }\r\n    }\r\n\r\n    const plan = {\r\n        schedule\r\n    }\r\n    // Add repetition tip\r\n    if (goal === goalsAvailable.lose_weight.name) {\r\n        plan.tip = \"Target repetitions: 10-12\"\r\n    }\r\n    if (goal === goalsAvailable.overall.name) {\r\n        plan.tip = \"Target repetitions: 7-9\"\r\n    }\r\n    if (goal === goalsAvailable.bulk_up.name) {\r\n        plan.tip = \"Target repetitions: 4-6\"\r\n    }\r\n\r\n    // Add timestamp\r\n    var d = new Date();\r\n    plan.time = d.getTime();\r\n\r\n    return plan;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport { generatePlan };","import { Auth } from 'aws-amplify';\r\n\r\nconst baseUrl = \"https://60iw3lcpqc.execute-api.us-east-2.amazonaws.com/testGet/id\";\r\n\r\nconst getUserId = async (callback) => {\r\n    let user;\r\n    try {\r\n        user = await Auth.currentAuthenticatedUser();\r\n    } catch(err) {\r\n        user = null;\r\n    }\r\n    if (user) callback(user.attributes.sub);\r\n}\r\n\r\nconst getUsername = async (callback) => {\r\n    let user;\r\n    try {\r\n        user = await Auth.currentAuthenticatedUser();\r\n    } catch(err) {\r\n        user = null;\r\n    }\r\n    if (user){\r\n        //console.log(user.username)\r\n        callback(user.username);\r\n    } \r\n}\r\n\r\nfunction stringToBinary(input) {\r\n    var characters = input.split('');\r\n  \r\n    return characters.map(function(char) {\r\n      const binary = char.charCodeAt(0).toString(2)\r\n      const pad = Math.max(8 - binary.length, 0);\r\n      // Just to make sure it is 8 bits long.\r\n      return '0'.repeat(pad) + binary;\r\n    }).join('');\r\n  }\r\n  \r\n  function binaryToString(input) {\r\n    let bytesLeft = input;\r\n    let result = '';\r\n  \r\n    // Check if we have some bytes left\r\n    while (bytesLeft.length) {\r\n      // Get the first digits\r\n      const byte = bytesLeft.substr(0, 8);\r\n      bytesLeft = bytesLeft.substr(8);\r\n  \r\n      result += String.fromCharCode(parseInt(byte, 2));\r\n    }\r\n    return result;\r\n  }\r\n\r\nconst savePlan = async (plan) => {\r\n    const user = await Auth.currentAuthenticatedUser();\r\n    const splan = stringToBinary(JSON.stringify(plan));\r\n    if (user) {\r\n        const userId = user.attributes.sub;\r\n        const response = await fetch (`${baseUrl}/${userId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ \r\n                comment: splan\r\n            })\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst getPlan = async () => {\r\n    const user = await Auth.currentAuthenticatedUser();\r\n    if (user) {\r\n        const userId = user.attributes.sub;\r\n        const response = await fetch (`${baseUrl}/${userId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const result = await response.json();\r\n        //console.log(result)\r\n        let plan = result.Items[0].comment.S;\r\n        plan = binaryToString(plan);\r\n        return JSON.parse(plan);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { getUserId, getUsername, savePlan, getPlan };\r\n\r\n// { \r\n//     \"TableName\": \"users\",\r\n//     \"Item\": {\r\n//     \t\"id\": {\r\n//             \"S\": \"$input.params('id')\"\r\n//         },\r\n//         \"username\": {\r\n//             \"S\": \"$input.path('$.username')\"\r\n//         },\r\n//         \"comment\": { \r\n//             \"S\": \"$input.json('$')\"\r\n//         }\r\n//     }\r\n// }\r\n","import React from 'react'\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nexport default function IntroPane(props) {\r\n\r\n    return (\r\n        <Jumbotron className=\"text-center\" style={{ backgroundColor: 'inherit' }}>\r\n            <h2>Hi{props.username ? ' ' + props.username : \"\"}!</h2>\r\n            <br />\r\n            <br />\r\n            <h5>Time to create your custom fitness workout!</h5>\r\n        </Jumbotron>\r\n    )\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport './Tooltip.scss'\r\nimport colorScheme from './Tooltip.scss'\r\n\r\nexport class CustomCard extends Component {\r\n    /*\r\n        This is a single Card which contains an image, body, and title. Used to ensure uniform appearance throughout CreatePlan\r\n    */\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: false,\r\n            styles: {\r\n                minHeight: '240px',\r\n                //flex:1,\r\n                backgroundColor: colorScheme.backgroundNormal\r\n            }\r\n        }\r\n        this.inputRef = React.createRef();\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        if (props.image === undefined) {\r\n            props.image = \"\"\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.pass(this.inputRef, this.props.name);\r\n        if(this.props.category)\r\n            this.props.selected(this.props.category, this.props.name, this);\r\n        else\r\n        this.props.selected(this.props.name, this);\r\n        /*\r\n        // moving to function below\r\n        this.setState((previousState, currentProps) => {\r\n            const selectedNew = !previousState.selected;\r\n            this.styles = {\r\n                backgroundColor: this.state.selected ? colorScheme.backgroundSelected : colorScheme.backgroundNormal\r\n            }\r\n            const newBackground = selectedNew ? colorScheme.backgroundSelected : colorScheme.backgroundNormal;\r\n            return {\r\n                selected: selectedNew,\r\n                styles: {\r\n                    minHeight: '240px',\r\n                    backgroundColor: newBackground\r\n                }\r\n            };\r\n        });\r\n        */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card ref={this.inputRef} title=\"CustomCard\" className=\"text-center\" onClick={this.handleClick} style={this.state.styles}>\r\n                <Card.Img variant='top' src={this.props.image} style={{width:'90%', marginTop:'3px'}}/>\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.name}</Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomCard;\r\n\r\n\r\nexport function ensureCorrectNumberSelected(objectOfRefs, nameOfSelected, onlyOneCanBeSelected) {\r\n    // if only 1 Card can be selected at a time, unselect any others currently selected\r\n    if (onlyOneCanBeSelected) {\r\n        for (const [name, ref] of Object.entries(objectOfRefs)) {\r\n            // if this is the object that was selected, we need to flip its color (i.e. select if unselected, deselect if already selected)\r\n            if (name === nameOfSelected) {\r\n                const hexValue=RGBtoHex(objectOfRefs[nameOfSelected].current.style.backgroundColor);\r\n                //console.log('selected',name)\r\n                ref.current.style.backgroundColor = ((hexValue === colorScheme.backgroundNormal) ? colorScheme.backgroundSelected : colorScheme.backgroundNormal);\r\n            }\r\n            // if this is NOT the object that was selected, reset its color\r\n            else {\r\n                ref.current.style.backgroundColor = colorScheme.backgroundNormal;\r\n            }\r\n        }\r\n    }\r\n    // if multiple cards can be selected at once, just flip the color of the object that was selected\r\n    else {\r\n        /*\r\n            We can get the current background color via objectOfRefs[nameOfSelected].current.style.backgroundColor\r\n            That's in a formatted string, so we need to extract the rgb values and then convert them into hex, since that's how colorScheme.backgroundNormal is stored\r\n        */\r\n        \r\n        // 'flip' the color\r\n        const hexValue=RGBtoHex(objectOfRefs[nameOfSelected].current.style.backgroundColor);\r\n        objectOfRefs[nameOfSelected].current.style.backgroundColor = ((hexValue === colorScheme.backgroundNormal) ? colorScheme.backgroundSelected : colorScheme.backgroundNormal);\r\n    }\r\n}\r\n\r\nfunction RGBtoHex(rgbValue){\r\n    //let tempString = objectOfRefs[nameOfSelected].current.style.backgroundColor;\r\n    var a = rgbValue.split(\"(\")[1].split(\")\")[0];\r\n    a = a.split(\",\");\r\n    var hexValue = a.map(function(x){       //For each array element\r\n        x = parseInt(x).toString(16);       //Convert to a base16 string\r\n        return (x.length===1) ? \"0\"+x : x;  //Add zero if we get only one character\r\n    })\r\n    hexValue = \"#\"+hexValue.join(\"\");\r\n    return hexValue;\r\n}\r\n\r\n","import React from 'react'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport { CustomCard, ensureCorrectNumberSelected } from '../../../components/CustomCard'\r\nimport { goalsAvailable } from '../../../globalDefinitions'\r\n\r\nexport default function GoalsPane(props) {\r\n\r\n    // this gathers React refs to any Card which has been selected at least once.\r\n    let objectOfRefs = {};\r\n    const addRef = (ref, name) => {\r\n        objectOfRefs[name] = ref;\r\n    }\r\n\r\n    const handleSelected = (name) => {\r\n        ensureCorrectNumberSelected(objectOfRefs, name, true);\r\n        props.cardSelected(name);\r\n    }\r\n\r\n    const toDisplay = Object.values(goalsAvailable).map(piece =>\r\n        <CustomCard pass={addRef} id={piece.name} key={piece.name} selected={handleSelected} image={piece.image} name={piece.name} />\r\n    );\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h5>What are you trying to achieve?</h5>\r\n            <CardColumns onClick={props.handleClick}>\r\n                {toDisplay}\r\n            </CardColumns>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst CustomFormNumber = (props) => {\r\n    const [currentValue, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        props.selected(props.category, currentValue)\r\n    }, [props, currentValue]);\r\n\r\n    return (\r\n        <Form.Group>\r\n            <Form.Control size=\"lg\" type=\"number\" placeholder={props.category} value={props.currentValue} onChange={(e) => setValue(e.target.value)} />\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default CustomFormNumber;","import React from 'react'\r\nimport { CardColumns } from 'react-bootstrap'\r\nimport CustomFormNumber from '../../../components/CustomFormNumber'\r\nimport { CustomCard, ensureCorrectNumberSelected } from '../../../components/CustomCard'\r\nimport { gendersAvailable } from '../../../globalDefinitions'\r\nimport './Pane.scss'\r\n\r\nexport default function AgeGenderPane(props) {\r\n\r\n    // this gathers React refs to any Card which has been selected at least once.\r\n    let objectOfRefs = {};\r\n    const addRef = (ref, name) => {\r\n        objectOfRefs[name] = ref;\r\n    }\r\n\r\n    const handleSelected = (category, name) => {\r\n        if (category === \"Gender\")\r\n            ensureCorrectNumberSelected(objectOfRefs, name, true);\r\n        props.cardSelected(category, name);\r\n    }\r\n\r\n    let gendersToDisplay = Object.values(gendersAvailable).map(piece =>\r\n        <CustomCard pass={addRef} id={piece.name} key={piece.name} selected={handleSelected} image={piece.image} name={piece.name} category={piece.category} />\r\n    );\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h5>Tell us about yourself</h5>\r\n            <div style={{ position: 'relative', left: '75px', height: '100%', width: '100%' }}>\r\n                <CardColumns onClick={props.handleClick} >\r\n                    {gendersToDisplay}\r\n                </CardColumns>\r\n            </div>\r\n            <h5>How old are you?</h5>\r\n            <CustomFormNumber category=\"Age\" selected={handleSelected} />\r\n            <h5>What's your height in centimeters?</h5>\r\n            <CustomFormNumber category=\"Height\" selected={handleSelected} />\r\n            <h5>And your current weight in pounds?</h5>\r\n            <CustomFormNumber category=\"Weight\" selected={handleSelected} />\r\n        </div>\r\n    )\r\n}","/*\r\n    This file contains a helper function for sorting the Cards in a pane.\r\n    It also contains the variable defining the maximum number of columns <CardColumns> can have\r\n*/\r\n\r\nexport const MAX_COLUMNS = 3;\r\n\r\nexport function sortArrayForCardColumns(tempMap) {\r\n    let toReturn = [];\r\n    // <CardColumns> renders by column, not by row. \r\n    // To ensure the tiles appear in the correct order, we need to manually break them into columns\r\n    for (let c = 0; c < MAX_COLUMNS; c++) {\r\n        let nextElement = c;\r\n        while (nextElement < tempMap.length) {\r\n            toReturn.push(tempMap[nextElement]);\r\n            nextElement += MAX_COLUMNS;\r\n        }\r\n    }\r\n    return toReturn;\r\n}","import React from 'react'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport { CustomCard, ensureCorrectNumberSelected } from '../../../components/CustomCard'\r\nimport { equipmentAvailable } from '../../../globalDefinitions'\r\nimport { sortArrayForCardColumns } from '../helpers_createPlan'\r\n\r\n\r\nexport default function EquipmentPane(props) {\r\n\r\n    // this gathers React refs to any Card which has been selected at least once.\r\n    let objectOfRefs = {};\r\n    const addRef = (ref, name) => {\r\n        objectOfRefs[name] = ref;\r\n    }\r\n\r\n    const handleSelected = (name) => {\r\n        ensureCorrectNumberSelected(objectOfRefs, name, false);\r\n        props.cardSelected(name);\r\n    }\r\n\r\n    // sorting here just in case the values in equipmentAvailable aren't in alphabetical order\r\n    let tempArr = Object.values(equipmentAvailable).sort(function (a, b) {\r\n        var nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n        var nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n        if (nameA < nameB) {\r\n            return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n            return 1;\r\n        }\r\n\r\n        // names must be equal\r\n        return 0;\r\n    });\r\n    tempArr = tempArr.map(piece =>\r\n        <CustomCard pass={addRef} key={piece.name} selected={handleSelected} image={piece.image} name={piece.name} />\r\n        /*\r\n        <Card bg={'primary'}>\r\n            <Card.Img variant='top' src={piece.image} />\r\n            <Card.Body>\r\n                <Card.Title>{piece.name}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n        */\r\n    )\r\n    const toDisplay = sortArrayForCardColumns(tempArr);\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h5>What equipment do you have access to?</h5>\r\n            <CardColumns>\r\n                {toDisplay}\r\n            </CardColumns>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport { CustomCard, ensureCorrectNumberSelected } from '../../../components/CustomCard'\r\nimport { frequencyAvailable } from '../../../globalDefinitions'\r\n\r\nexport default function FrequencyPane(props) {\r\n\r\n    // this gathers React refs to any Card which has been selected at least once.\r\n    let objectOfRefs = {};\r\n    const addRef = (ref, name) => {\r\n        objectOfRefs[name] = ref;\r\n    }\r\n\r\n    const handleSelected = (name) => {\r\n        ensureCorrectNumberSelected(objectOfRefs, name, true);\r\n        props.cardSelected(name);\r\n    }\r\n\r\n    const toDisplay = Object.values(frequencyAvailable).map(piece =>\r\n        <CustomCard pass={addRef} key={piece.name} selected={handleSelected} image={piece.image} name={piece.name} />\r\n    );\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h5>How often do you want to work out?</h5>\r\n            <CardColumns>\r\n                {toDisplay}\r\n            </CardColumns>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport { CustomCard, ensureCorrectNumberSelected } from '../../../components/CustomCard'\r\nimport { fitLevelsAvailable } from '../../../globalDefinitions'\r\nimport { sortArrayForCardColumns } from '../helpers_createPlan'\r\n\r\nexport default function FitnessLevelPane(props) {\r\n\r\n    // this gathers React refs to any Card which has been selected at least once.\r\n    let objectOfRefs = {};\r\n    const addRef = (ref, name) => {\r\n        objectOfRefs[name] = ref;\r\n    }\r\n\r\n    const handleSelected = (name) => {\r\n        ensureCorrectNumberSelected(objectOfRefs, name, true);\r\n        props.cardSelected(name);\r\n    }\r\n\r\n    let tempArr = Object.values(fitLevelsAvailable).map(piece =>\r\n        <CustomCard pass={addRef} key={piece.name} selected={handleSelected} image={piece.image} name={piece.name} />\r\n    );\r\n    // .sort((a,b)=>a.displayOrder-b.displayOrder)\r\n\r\n    const toDisplay = sortArrayForCardColumns(tempArr);\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h5>What's your current fitness level?</h5>\r\n            <CardColumns>\r\n                {toDisplay}\r\n            </CardColumns>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport colorScheme from '../CreatePlan.scss'\r\n\r\nexport default function FinalPaneSubmitData(props) {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            props.createPlan()\r\n        }\r\n    }, [isLoading, props]);\r\n\r\n    const handleClick = () => setLoading(true);\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <h3>Great! </h3>\r\n                <h5>Click the button to create your custom fitness plan.</h5>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={{ span: 4, offset: 4 }}>\r\n                    <Button\r\n                        onClick={!isLoading ? handleClick : null}\r\n                        style={{ background: colorScheme.backgroundSelected }}>\r\n                        {isLoading ? 'Working…' : 'Create Plan'}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport colorScheme from '../CreatePlan.scss'\r\n//import {getPlan} from '../../../api/user'\r\n\r\nexport default function FinalPaneSuccess() {\r\n    //console.log()\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <h4>Plan created!</h4>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={{ span: 4, offset: 4 }}>\r\n                    <Link to=\"/myfit/view-plans\">\r\n                        <Button style={{ background: colorScheme.backgroundSelected }}>View Your Plan</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n//href=\"/view-plans\" \r\n//<Button style={{ background: colorScheme.backgroundSelected }}>View Plan</Button>","import React from 'react'\r\n//import { Container, Row, Col, Button } from 'react-bootstrap'\r\n//import colorScheme from '../CreatePlan.scss'\r\nimport FinalPaneSubmitData from './FinalPaneSubmitData'\r\nimport FinalPaneSuccess from './FinalPaneSuccess'\r\n\r\nexport default function FinalPane(props) {\r\n    //console.log('final pane rendering, value:', props.createPlanSuccessful)\r\n    if (props.createPlanSuccessful) {\r\n        //console.log('success')\r\n        return <FinalPaneSuccess />\r\n    }\r\n    else {\r\n        return <FinalPaneSubmitData createPlan={props.createPlan} />\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport colorScheme from '../pages/CreatePlan/CreatePlan.scss'\r\n\r\nconst ForceLogin = (props) => {\r\n    const verbToDisplay = props.page ? props.page : \"customizing\";\r\n    return (\r\n        <Jumbotron className=\"text-center\" style={{ backgroundColor: 'inherit' }}>\r\n            <h2>Please log in before {verbToDisplay} a plan.</h2>\r\n            <br />\r\n            <br />\r\n            <Link to=\"/login\">\r\n                <Button style={{ background: colorScheme.backgroundSelected }}>Login</Button>\r\n            </Link>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default ForceLogin\r\n","/*\r\n    This is a custom version of https://github.com/srdjan/react-multistep\r\n    Fixed a bug on line 90 and removed the navigation header from the top\r\n*/\r\n\r\nimport React, { useState } from 'react'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport { setup } from 'goober'\r\nimport './CreatePlan.scss'\r\n\r\n\r\nsetup(React.createElement)\r\n\r\n/*\r\n// Part of the removed navigation header\r\nconst Ol = styled('ol')`\r\n  margin: 0;\r\n  padding-bottom: 2.2rem;\r\n  list-style-type: none;\r\n`\r\n\r\n\r\nconst LiClass = props => css`\r\n  display: inline-block;\r\n  text-align: center;\r\n  line-height: 4.5rem;\r\n  padding: 0 0.7rem;\r\n  cursor: pointer;\r\n\r\n  color: ${props.state === 'todo' ? 'silver' : 'black'};\r\n  border-bottom: 4px solid ${props.state === 'todo' ? 'silver' : '#33C3F0'};\r\n\r\n  &:before {\r\n    position: relative;\r\n    bottom: -3.99rem;\r\n    float: left;\r\n    left: 50%;\r\n\r\n    ${props.state === 'todo' ? 'content: \"\\u039F\";' :\r\n    props.state === 'doing' ? 'content: \"\\u2022\";' :\r\n      'content: \"\\u2713\";'}\r\n    color: ${props.state === 'todo' ? 'silver' : 'white'};\r\n    background-color: ${props.state === 'todo' ? 'white' : '#33C3F0'};  \r\n    width: 1.2em;\r\n    line-height: ${props.state === 'todo' ? '1.2em' : '1.4em'};\r\n    border-radius: ${props.state === 'todo' ? '0' : '1.2em'};\r\n  }\r\n  &:hover,\r\n  &::before {\r\n    color: #0FA0CE;\r\n  }\r\n  &:after {\r\n    content: \"\\\\00a0\\\\00a0\";\r\n  }   \r\n  span {\r\n    padding: 0 1.5rem;\r\n  }\r\n`\r\n\r\nconst getTopNavStyles = (indx, length) => {\r\n  let styles = []\r\n  for (let i = 0; i < length; i++) {\r\n    if (i < indx) {\r\n      styles.push('done')\r\n    } else if (i === indx) {\r\n      styles.push('doing')\r\n    } else {\r\n      styles.push('todo')\r\n    }\r\n  }\r\n  return styles\r\n}\r\n*/\r\n\r\nconst getButtonsState = (indx, length) => {\r\n  // middle steps\r\n  if (indx > 0 && indx < length - 1) {\r\n    return {\r\n      textForNext:'Next',\r\n      showPreviousBtn: true,\r\n      showNextBtn: true\r\n    }\r\n    // first step\r\n  } else if (indx === 0) {\r\n    return {\r\n      textForNext:'Start',\r\n      showPreviousBtn: false,\r\n      showNextBtn: true\r\n    }\r\n    // last step\r\n  } else {\r\n    return {\r\n      showPreviousBtn: false,\r\n      showNextBtn: false\r\n    }\r\n  }\r\n}\r\n\r\nexport default function MultiStep(props) {\r\n  let showNav = true\r\n  // this was the line that needed to be fixed\r\n  if (props.showNavigation !== undefined) showNav = props.showNavigation\r\n\r\n  /*let prevStyle = {}\r\n  if (props.prevStyle) prevStyle = props.prevStyle\r\n\r\n  let nextStyle = {}\r\n  if (props.nextStyle) nextStyle = props.nextStyle\r\n  */\r\n\r\n  //const [stylesState, setStyles] = useState(getTopNavStyles(0, props.steps.length))\r\n  const [compState, setComp] = useState(0)\r\n  const [buttonsState, setButtons] = useState(getButtonsState(0, props.steps.length))\r\n\r\n  const setStepState = (indx) => {\r\n    //setStyles(getTopNavStyles(indx, props.steps.length))\r\n    setComp(indx < props.steps.length ? indx : compState)\r\n    setButtons(getButtonsState(indx, props.steps.length))\r\n  }\r\n\r\n  const next = () => setStepState(compState + 1)\r\n  const previous = () => setStepState(compState > 0 ? compState - 1 : compState)\r\n  const handleKeyDown = evt => evt.which === 13 ? next(props.steps.length) : {}\r\n\r\n  /*\r\n  const handleOnClick = evt => {\r\n    if (\r\n      evt.currentTarget.value === props.steps.length - 1 &&\r\n      compState === props.steps.length - 1\r\n    ) {\r\n      setStepState(props.steps.length)\r\n    } else {\r\n      setStepState(evt.currentTarget.value)\r\n    }\r\n  }\r\n  */\r\n\r\n  /*\r\n  // This was part of the navigation header\r\n  const renderSteps = () =>\r\n    props.steps.map((s, i) => (\r\n      <li\r\n        className={LiClass({ state: stylesState[i] })}\r\n        onClick={handleOnClick}\r\n        key={i}\r\n        value={i}\r\n      >\r\n        <span>{i + 1}</span>\r\n      </li>\r\n    ))\r\n    */\r\n  /*\r\n  //replacing with React Bootstrap versions\r\n    const renderNav = (show) =>\r\n      show && (\r\n        <div>\r\n          <button\r\n            style={buttonsState.showPreviousBtn ? props.prevStyle : { display: 'none' }}\r\n            onClick={previous}\r\n          >\r\n            Prev\r\n          </button>\r\n  \r\n          <button\r\n            style={buttonsState.showNextBtn ? props.nextStyle : { display: 'none' }}\r\n            onClick={next}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      )\r\n      */\r\n\r\n  const renderNav = (show) =>\r\n    show && (\r\n      <Container >\r\n        <Row  className=\"justify-content-xs-center\">\r\n          <Col xs='7'>\r\n            <Button\r\n              id='create-button-prev'\r\n              style={buttonsState.showPreviousBtn ? {display:'initial'} : { display: 'none' }}\r\n              onClick={previous}\r\n            >Prev</Button>\r\n          </Col>\r\n\r\n          <Col >\r\n            <Button\r\n              id='create-button-next'\r\n              style={buttonsState.showNextBtn ? {display:'initial'} : { display: 'none' }}\r\n              onClick={next}\r\n            >{buttonsState.textForNext}</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n\r\n  return (\r\n    <div onKeyDown={handleKeyDown}>\r\n\r\n      <div>{props.steps[compState].component}</div>\r\n      <div>{renderNav(showNav)}</div>\r\n    </div>\r\n  )\r\n  // removed progress bar from line 156 (first line of parent div's contents)\r\n  //<Ol>{renderSteps()}</Ol>\r\n}\r\n","// React\r\nimport React, { useRef, useState, useCallback, useEffect } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n// API calls\r\nimport { generatePlan } from '../../api/algorithm';\r\nimport { savePlan, getUsername } from '../../api/user';\r\n// Panes to display\r\nimport { IntroPane, GoalsPane, AgeGenderPane, FitnessLevelPane, EquipmentPane, FrequencyPane, FinalPane } from './panes'\r\nimport ForceLogin from '../../components/ForceLogin.jsx'\r\n// Multistep to handle displaying panes\r\nimport MultiStep from './multistep-modified'\r\n// CSS file\r\n//import colorScheme from './CreatePlan.scss'\r\n\r\n\r\n\r\n//const prevStyle = { background: colorScheme.complementary, borderWidth: '2px', marginLeft: '100px' }\r\n//const nextStyle = { background: colorScheme.backgroundSelected, borderWidth: '2px' }\r\n\r\n\r\nconst CreatePlan = () => {\r\n    const [success, planCreatedSuccessfully] = useState(false);\r\n    const onChange = useCallback(e => {\r\n        planCreatedSuccessfully(e)\r\n    }, []\r\n    );\r\n\r\n\r\n    const result = useRef({\r\n        'Goals': [],\r\n        'Age': [],\r\n        'Gender': [],\r\n        'Height': [],\r\n        'Weight': [],\r\n        'FitnessLevel': [],\r\n        'Equipment': [],\r\n        'Frequency': []\r\n    });\r\n\r\n    const [username, setUsername] = useState(null);\r\n    useEffect(() => {\r\n        getUsername((name) => {\r\n            if (name)\r\n                setUsername(name);\r\n        });\r\n    }, []);\r\n\r\n    // name is the pane/category (i.e. 'Goals'), item is the text for that option (i.e. 'Lose Weight')\r\n    const handleSelected = (name, item) => {\r\n        //console.log(\"index. name:\",name,'item:',item)\r\n        const index = result.current[name].indexOf(item);\r\n        // if it doesn't appear in the selected preferences, add it\r\n        if (index === -1) {\r\n            result.current[name].push(item);\r\n        } else {\r\n            // if it did appear, the user just deselected that option, so remove it from the saved preferences\r\n            result.current[name].splice(index, 1);\r\n        }\r\n        //console.log(result.current)\r\n    }\r\n\r\n    const createPlanSuccessful = useRef(false);\r\n    const createPlan = async () => {\r\n        //console.log(result.current)\r\n        const plan = generatePlan(result.current);\r\n        //console.log('plan:',plan)\r\n        await savePlan(plan);\r\n        //const savedPlan = await getPlan();\r\n        //console.log(savedPlan);\r\n        createPlanSuccessful.current = true\r\n        //console.log(createPlanSuccessful.current)\r\n        onChange(true);\r\n    }\r\n\r\n    // contains the steps in order\r\n    const steps = [\r\n        { name: 'Intro', component: <IntroPane username={username} /> },\r\n        { name: 'Goals', component: <GoalsPane cardSelected={(item) => { handleSelected('Goals', item) }} /> },\r\n        { name: 'AgeGender', component: <AgeGenderPane cardSelected={(category, item) => { handleSelected(category, item) }} /> },\r\n        //{ name: 'HeightWeight', component: <HeightWeightPane cardSelected={(category, item) => { handleSelected(category, item) }} /> },\r\n        { name: 'FitnessLevel', component: <FitnessLevelPane cardSelected={(item) => { handleSelected('FitnessLevel', item) }} /> },\r\n        { name: 'Equipment', component: <EquipmentPane cardSelected={(item) => { handleSelected('Equipment', item) }} /> },\r\n        { name: 'Frequency', component: <FrequencyPane cardSelected={(item) => { handleSelected('Frequency', item) }} /> },\r\n        { name: 'Finalize', component: <FinalPane createPlan={createPlan} createPlanSuccessful={createPlanSuccessful.current} temp={success} /> }\r\n    ];\r\n\r\n    return (\r\n        <Modal.Dialog>\r\n            <Modal.Body>\r\n                {username ?\r\n                    <MultiStep showNavigation={true} steps={steps} /> :\r\n                    <ForceLogin page={\"creating\"} />\r\n                }\r\n\r\n            </Modal.Body>\r\n        </Modal.Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default CreatePlan;","import React, { useState, useEffect } from 'react';\r\n//import Button from 'react-bootstrap/Button'\r\nimport './home.scss';\r\nimport { getUsername } from '../../api/user';\r\n\r\n\r\nconst Home = () => {\r\n  const [username, setUsername] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUsername((name) => {\r\n      if (name)\r\n        setUsername(name);\r\n    });\r\n  }, []);\r\n  /*\r\n  [data_, setdata_] = useState(\"\");\r\n  \r\n  function fetchTest() {\r\n    var request = fetch('https://b0z7sgc167.execute-api.us-east-2.amazonaws.com/default/testDynamo', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        //'x-api-key': 'API-KEY',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setdata_(data);\r\n        return data;\r\n      })\r\n      .catch((error) => console.log('Error while fetching:', error));\r\n    return {\r\n      //type: ActionTypes.FETCH_TODOLIST,\r\n      payload: request,\r\n    };\r\n  }\r\n  \r\n\r\n  // supress no-unused-vars warning\r\n  if(data_){}\r\n  \r\n\r\n  useEffect(() => { \r\n    fetchTest();\r\n    getUserId((id) => {\r\n      console.log(id);\r\n    });\r\n  }, []);\r\n  */\r\n\r\n  //var timeTest=this.data;\r\n  //console.log(\"hello\");\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"intro-wrapper\">\r\n        <h1>Welcome to MyFitPlanner{username ? ', ' + username : \"!\"}</h1>\r\n        <h3>Please login to begin, or click View Plan to view your custom fitness plan.</h3>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n// <h2>{JSON.stringify(data_)}</h2>","import React from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\n//import { render } from 'react-dom';\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n//import withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { getPlan, getUsername } from '../../api/user';\r\nimport { useEffect, useState } from 'react'\r\nimport ForceLogin from '../../components/ForceLogin'\r\n//import {createTooltip} from '../../components/Tooltip'\r\n//import { formRow } from 'aws-amplify';\r\n//import 'normalize.css/normalize.css'\r\n\r\nmoment.locale('en-US');\r\nconst localizer = momentLocalizer(moment);\r\n//const DragAndDropCalendar = withDragAndDrop(Calendar);\r\n//BigCalendar.momentLocalizer(moment);\r\n\r\nconst MAX_LENGTH_OF_PLAN = 30;\r\n\r\nvar typicalWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nvar bodyParts = [\"back\", \"biceps\", \"cardio\", \"legs\", \"chest\", \"shoulders\", \"triceps\"];\r\nvar firstWeek = new Array(7);\r\nfunction generateFirstWeek() {\r\n  var today = new Date();\r\n  var dayToday = today.getDay();\r\n  for (var i = 0; i < 7; i++) {\r\n    //console.log(i);\r\n    firstWeek[i] = new Date();\r\n    if (i >= dayToday) {\r\n      firstWeek[i].setDate(today.getDate() + i - dayToday);\r\n    }\r\n    else {\r\n      firstWeek[i].setDate(today.getDate() + i - dayToday + 7);\r\n    }\r\n    //console.log(firstWeek[i]);\r\n  }\r\n}\r\n//generateFirstWeek();\r\n//console.log(firstWeek);\r\n\r\n/*\r\nvar testname='hello';\r\nconst newevent={\r\n  'title': 'testname',\r\n  'allDay': true,\r\n  'start': new Date(2020,10,17),  \r\n  'end': new Date(2020,10,17), \r\n}\r\nmyevent.push(newevent)\r\n*/\r\nconst ViewPlans = (props) => {\r\n  const [myevent, setmyevent] = useState([{\r\n    'title': 'testevent',\r\n    'allDay': true,\r\n    'start': new Date(2020, 10, 17),\r\n    'end': new Date(2020, 10, 17),\r\n  }]);\r\n  /*\r\n  const myevent=[\r\n    myevent\r\n    {\r\n      'title': 'testevent',\r\n      'allDay': true,\r\n      'start': new Date(2020,10,17), \r\n      'end': new Date(2020,10,17),\r\n    }\r\n  ]; \r\n  */\r\n  useEffect(() => {\r\n    // rearranged this line to solve react-hook/exhaustive-deps warning\r\n    async function fetchData() {\r\n\r\n      const savedPlan = await getPlan();\r\n      await generateFirstWeek();\r\n      //console.log(savedPlan.schedule);\r\n      const eventArray = [];\r\n      for (var i = 0; i < typicalWeek.length; i++) {\r\n        if (typicalWeek[i] in savedPlan.schedule) {\r\n          var firstDay = firstWeek[i];\r\n          //console.log(savedPlan.schedule,typicalWeek[i])\r\n          for (var j = 0; j < bodyParts.length; j++) {\r\n            if (bodyParts[j] in savedPlan.schedule[typicalWeek[i]]) {\r\n              var curname = savedPlan.schedule[typicalWeek[i]][bodyParts[j]].name;\r\n              curname = String(curname);\r\n              //console.log(curname);\r\n              //console.log(firstDay)\r\n              for (var k = 0; k < MAX_LENGTH_OF_PLAN; k = k + 7) {\r\n                var curDay = new Date();\r\n                curDay.setDate(firstDay.getDate() + k);\r\n                const newevent = {\r\n                  'title': curname,\r\n                  'allDay': true,\r\n                  'start': curDay,\r\n                  'end': curDay,\r\n                }\r\n                eventArray.push(newevent);\r\n              }\r\n\r\n              //newevent.title=curname;\r\n              //eventArray.push(newevent);\r\n\r\n              //myevent.push(newevent);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      setmyevent(eventArray);\r\n    }\r\n    fetchData()\r\n  }, []);\r\n  //console.log(\"hello\");\r\n  //const savedPlan = getPlan();\r\n\r\n  /*  const showPlan = async () => {\r\n      const savedPlan = await getPlan();\r\n      await generateFirstWeek();\r\n      console.log(savedPlan.schedule);\r\n      for(var i=0;i<typicalWeek.length;i++)\r\n      {\r\n        if(typicalWeek[i] in savedPlan.schedule)\r\n        {\r\n          var firstDay=firstWeek[i];\r\n          //console.log(savedPlan.schedule,typicalWeek[i])\r\n          for(var j=0;j<bodyParts.length;j++)\r\n          {\r\n            if(bodyParts[j] in savedPlan.schedule[typicalWeek[i]])\r\n            {\r\n              var curname=savedPlan.schedule[typicalWeek[i]][bodyParts[j]].name;\r\n              curname=String(curname);\r\n              console.log(curname);\r\n              console.log(firstDay)\r\n              const newevent={\r\n                'title': curname,\r\n                'allDay': true,\r\n                'start': firstDay, \r\n                'end': firstDay,\r\n              }\r\n              //newevent.title=curname;\r\n              myevent.push(newevent);\r\n            }\r\n          } \r\n        }\r\n      }\r\n    }\r\n    */\r\n  //console.log('viewplan page');\r\n\r\n  const [username, setUsername] = useState(null);\r\n  useEffect(() => {\r\n    getUsername((name) => {\r\n      if (name)\r\n        setUsername(name);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {username ?\r\n        <div style={{ height: '85vh', backgroundImage: \"url('/static/media/bg-pattern.83c67c04.png')\", backgroundColor: 'white' }}>\r\n          <Calendar popup\r\n            localizer={localizer}\r\n            onSelectEvent={props.display}\r\n            events={myevent}\r\n            step={60}\r\n            //onEventDrop     // removed to supress error message --> this wasn't being passed an argument\r\n            views={['week', 'month']}\r\n            defaultView={Views.MONTH}\r\n          />\r\n        </div> :\r\n        <Modal.Dialog>\r\n          <Modal.Body>\r\n            <ForceLogin page={\"viewing\"} />\r\n          </Modal.Body>\r\n        </Modal.Dialog>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n//export ViewPlans;\r\n//export {BigCalendar} from 'react-big-calendar';\r\n\r\nexport default ViewPlans;\r\n/*\r\nimport React from 'react'\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\r\n\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\r\nmoment.locale('en-US');\r\nconst localizer = momentLocalizer(moment);\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\n//const DragAndDropCalendar = withDragAndDrop(Calendar)\r\n\r\nconst events = [\r\n  {\r\n    id: 0,\r\n    title: 'Board meeting',\r\n    start: new Date(2018, 0, 29, 9, 0, 0),\r\n    end: new Date(2018, 0, 29, 13, 0, 0),\r\n    resourceId: 1,\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'MS training',\r\n    start: new Date(2018, 0, 29, 14, 0, 0),\r\n    end: new Date(2018, 0, 29, 16, 30, 0),\r\n    resourceId: 2,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Team lead meeting',\r\n    start: new Date(2018, 0, 29, 8, 30, 0),\r\n    end: new Date(2018, 0, 29, 12, 30, 0),\r\n    resourceId: 3,\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Board meeting',\r\n    start: new Date(2018, 0, 30, 23, 0, 0),\r\n    end: new Date(2018, 0, 30, 23, 59, 0),\r\n    resourceId: 1,\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Birthday Party',\r\n    start: new Date(2018, 0, 30, 7, 0, 0),\r\n    end: new Date(2018, 0, 30, 10, 30, 0),\r\n    resourceId: 4,\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Board meeting',\r\n    start: new Date(2018, 0, 29, 23, 59, 0),\r\n    end: new Date(2018, 0, 30, 13, 0, 0),\r\n    resourceId: 1,\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Board meeting',\r\n    start: new Date(2018, 0, 29, 23, 50, 0),\r\n    end: new Date(2018, 0, 30, 13, 0, 0),\r\n    resourceId: 2,\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Board meeting',\r\n    start: new Date(2018, 0, 29, 23, 40, 0),\r\n    end: new Date(2018, 0, 30, 13, 0, 0),\r\n    resourceId: 4,\r\n  },\r\n]\r\n\r\nconst resourceMap = [\r\n  { resourceId: 1, resourceTitle: 'Board room' },\r\n  { resourceId: 2, resourceTitle: 'Training room' },\r\n  { resourceId: 3, resourceTitle: 'Meeting room 1' },\r\n  { resourceId: 4, resourceTitle: 'Meeting room 2' },\r\n]\r\n\r\nclass Dnd extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      events: events,\r\n    }\r\n\r\n    this.moveEvent = this.moveEvent.bind(this)\r\n  }\r\n\r\n  moveEvent({ event, start, end, resourceId, isAllDay: droppedOnAllDaySlot }) {\r\n    const { events } = this.state\r\n\r\n    const idx = events.indexOf(event)\r\n    let allDay = event.allDay\r\n\r\n    if (!event.allDay && droppedOnAllDaySlot) {\r\n      allDay = true\r\n    } else if (event.allDay && !droppedOnAllDaySlot) {\r\n      allDay = false\r\n    }\r\n\r\n    const updatedEvent = { ...event, start, end, resourceId, allDay }\r\n\r\n    const nextEvents = [...events]\r\n    nextEvents.splice(idx, 1, updatedEvent)\r\n\r\n    this.setState({\r\n      events: nextEvents,\r\n    })\r\n  }\r\n\r\n  resizeEvent = (resizeType, { event, start, end }) => {\r\n    const { events } = this.state\r\n\r\n    const nextEvents = events.map(existingEvent => {\r\n      return existingEvent.id == event.id\r\n        ? { ...existingEvent, start, end }\r\n        : existingEvent\r\n    })\r\n\r\n    this.setState({\r\n      events: nextEvents,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    //const {localizer}=this.props;\r\n    const localizer = momentLocalizer(moment);\r\n    return (\r\n      <DragAndDropCalendar\r\n        selectable\r\n        localizer={this.props.localizer}\r\n        events={this.state.events}\r\n        onEventDrop={this.moveEvent}\r\n        resizable\r\n        resources={resourceMap}\r\n        resourceIdAccessor=\"resourceId\"\r\n        resourceTitleAccessor=\"resourceTitle\"\r\n        onEventResize={this.resizeEvent}\r\n        defaultView=\"day\"\r\n        step={15}\r\n        showMultiDayTimes={true}\r\n        defaultDate={new Date(2018, 0, 29)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dnd\r\n*/\r\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:e7cfd992-b94c-4de7-909f-35d0cdc1d904\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_6Ls5J0ngU\",\n    \"aws_user_pools_web_client_id\": \"65ali1mop7ku26p2i1biqtplv7\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import { getUserId } from 'api/user';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavbarBrand from 'react-bootstrap/NavbarBrand';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst CustomNavBar = ({loggedIn}) => {\r\n    const [userLoggedIn, setuserLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n      getUserId((id) => {\r\n        if (id) setuserLoggedIn(true);\r\n      });\r\n    }, []);\r\n\r\n    return (\r\n    <Navbar id='my-navbar' variant=\"dark\" expand=\"lg\" >\r\n      <NavbarBrand>\r\n        <h2>MyFitPlanner</h2>\r\n      </NavbarBrand>\r\n      <NavLink\r\n        to=\"/home\"\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          textDecoration: \"underline\",\r\n        }}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/create-plan\"\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          textDecoration: \"underline\",\r\n        }}\r\n      >\r\n        Create Plan\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/view-plans\"\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          textDecoration: \"underline\",\r\n        }}\r\n      >\r\n        View Plans\r\n      </NavLink>\r\n      <NavLink\r\n        style={{\r\n          marginLeft: \"auto\",\r\n          color: \"rgb(50, 50, 219)\"\r\n        }}\r\n        to=\"/login\"\r\n        activeStyle={{\r\n          fontWeight: \"bold\",\r\n          textDecoration: \"underline\",\r\n        }}\r\n      >\r\n        {(loggedIn || userLoggedIn) ? 'Account' : 'Login'}\r\n      </NavLink>\r\n    </Navbar>\r\n    );\r\n  }\r\n\r\n  export default CustomNavBar;","import React from 'react';\r\nimport { AmplifySignOut } from '@aws-amplify/ui-react';\r\n\r\nimport './Profile.scss';\r\n\r\nconst Profile = ({user}) => {\r\n\r\n    //console.log(user);\r\n\r\n    return (<>\r\n    <div className=\"profile-wrapper\">\r\n        <h1 className=\"phead\">Hello, {user.username}!</h1>\r\n        <div style={{padding: '0px 50px'}}>\r\n            <p>Checkout the <i>Create Plan Page</i> to generate your custom fitness plan.</p>\r\n            \r\n        </div>\r\n        <div className=\"amp-signout-wrapper\">\r\n        <AmplifySignOut />\r\n        </div>\r\n    </div>\r\n    </>);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n// import './App.css';\r\nimport Amplify from 'aws-amplify';\r\nimport { AmplifyAuthenticator } from '@aws-amplify/ui-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\r\nimport awsconfig from '../../aws-exports';\r\nimport { useLocation } from 'react-router-dom'\r\nimport './login.scss';\r\nimport CustomNavBar from 'components/navbar';\r\nimport Profile from './Profile';\r\n\r\nAmplify.configure(awsconfig);\r\n\r\nconst AuthStateApp = () => {\r\n    const history = useHistory();\r\n    const [authState, setAuthState] = React.useState();\r\n    const [user, setUser] = React.useState({ first: true });\r\n    const currentRoute = useLocation().pathname;\r\n\r\n    const isLoginPage = currentRoute === '/login';\r\n\r\n    React.useEffect(() => {\r\n        return onAuthUIStateChange((nextAuthState, authData) => {\r\n            setAuthState(prevState => {\r\n              //console.log(prevState, nextAuthState);\r\n              if (prevState !== AuthState.SignedIn && prevState !== undefined && nextAuthState === AuthState.SignedIn) {\r\n                history.push('/create-plan'); // user signs in\r\n                //history.push('/login'); // user signs in\r\n              } else if (prevState === AuthState.SignedIn && nextAuthState !== AuthState.SignedIn) {\r\n                history.push('/home'); // user signs out\r\n              }\r\n              return nextAuthState;\r\n            });\r\n            setUser(prevState => {\r\n              return authData;\r\n            })\r\n        });\r\n    }, [history]);\r\n\r\n    \r\n\r\n  return <div className=\"auth-wrapper\">\r\n          \r\n          {authState === AuthState.SignedIn && user ? (\r\n              isLoginPage &&\r\n              <>\r\n                <CustomNavBar loggedIn />\r\n                <Profile user={user} />\r\n              </>\r\n            ) : (\r\n              isLoginPage && \r\n              <>\r\n                <CustomNavBar />\r\n                <AmplifyAuthenticator />\r\n              </>\r\n            )}\r\n        </div>\r\n}\r\n\r\nexport default AuthStateApp;\r\n\r\n/*\r\n  If we want to just collect emails and not phone numbers, use this instead:\r\n  <AmplifyAuthenticator >\r\n      <AmplifySignUp\r\n        slot=\"sign-up\"\r\n        formFields={[\r\n          { type: \"username\" },\r\n          { type: \"password\" },\r\n          { type: \"email\" }\r\n        ]}\r\n      />\r\n  </AmplifyAuthenticator>\r\n\r\n\r\n*/\r\n","import React from 'react'\r\n\r\nexport const Instructions = (props) => {\r\n\r\n    const exercise = props.exercise ? props.exercise : null;\r\n    if (exercise === null)\r\n        return null\r\n\r\n    let instructions = null;\r\n    if (exercise.instructions) {\r\n        instructions = exercise.instructions.map((step) => (\r\n            <li key={step.substring(0, step.length * .1)}>\r\n                {step}\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>Instructions:\r\n            <ul style={{ fontSize: '12' }}>\r\n                {instructions}\r\n            </ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport const Tips = (props) => {\r\n\r\n    const exercise = props.exercise ? props.exercise : null;\r\n    if (exercise === null)\r\n        return null\r\n\r\n    let tips = null;\r\n    if (exercise.tips) {\r\n        tips = exercise.tips.map((tip) => (\r\n            <li key={tip.substring(0, tip.length * .1)}>\r\n                {tip}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <React.Fragment>\r\n                Tips:\r\n                <ul style={{ fontSize: '12' }}>\r\n                    {tips}\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else\r\n        return null;\r\n\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap'\r\nimport { Instructions, Tips } from './InstructionsAndTips'\r\n// CSS file\r\nimport colorScheme from './Tooltip.scss'\r\n\r\n\r\nexport default function Tooltip(props) {\r\n\r\n    const exercise = props.exercise;\r\n\r\n    const handleClose = () => {\r\n        props.hide();\r\n    }\r\n\r\n    if (exercise) {\r\n        //console.log(instructions)\r\n        return (\r\n            <Modal centered dialogClassName='modal-dialog-tooltip' show={props.show} onHide={handleClose} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className='w-100 text-center'>{exercise.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Instructions exercise={exercise} />\r\n                                <Tips exercise={exercise} />\r\n                            </Col>\r\n                            <Col>\r\n                                <div className='videoWrapper' >\r\n                                    <embed src={`https://www.youtube.com/embed/${exercise.video}`} type=\"video/mp4\" />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"justify-content-md-center\">\r\n                    <Button variant=\"secondary\" onClick={handleClose} style={{ background: colorScheme.backgroundSelected }}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal >\r\n        );\r\n    }\r\n    else\r\n        return null;\r\n}\r\n\r\n//<iframe width=\"949\" height=\"534\" src={`https://www.youtube.com/embed/${addr}`} frameborder=\"0\" allow=\"encrypted-media\" allowfullscreen></iframe>\r\n/*\r\n<embed src={`https://www.${addr}`} type=\"video/mp4\"/>\r\n*/","import React, { useState } from 'react';\r\nimport './App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Home, CreatePlan, ViewPlans, Login } from \"pages\";\r\nimport Tooltip from './components/Tooltip';\r\nimport { exercises } from './globalDefinitions'\r\n\r\nimport CustomNavBar from 'components/navbar';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [show, setShow] = useState(false);\r\n  const [exercise, setExercise] = useState(null);\r\n\r\n  const createTooltip = (event) => {\r\n    const selectedExercise = event.title;\r\n    //console.log(selectedExercise)\r\n    //console.log(exercises[selectedExercise])\r\n    setExercise(exercises[selectedExercise]);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    //console.log('app hide');\r\n    setShow(false);\r\n  }\r\n  const handleShow = (event) => {\r\n    //console.log('app show', event);\r\n    createTooltip(event)\r\n    setShow(true);\r\n  }\r\n  return (\r\n    <div>\r\n      <Login />\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n        </Route>\r\n        <Route path=\"/home\">\r\n          <CustomNavBar />\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/create-plan\">\r\n          <CustomNavBar />\r\n          <CreatePlan />\r\n        </Route>\r\n        <Route path=\"/view-plans\">\r\n          <CustomNavBar />\r\n          <Tooltip show={show} hide={handleClose} exercise={exercise} />\r\n          <ViewPlans display={handleShow} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/home\",\r\n            }}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport awsconfig from './aws-exports';\r\nAmplify.configure(awsconfig);\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename='/myfit'>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundNormal\":\"#f6eaea\",\"backgroundSelected\":\"#d3723b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundNormal\":\"#f6eaea\",\"backgroundSelected\":\"#d3723b\"};"],"sourceRoot":""}